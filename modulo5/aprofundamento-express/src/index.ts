import express, { response } from "express";
import cors from 'cors'
import { type } from "os";
import { request } from "https";

const app = express();

app.use(express.json());
app.use(cors())

// Exerc√≠cio 1
// Fa√ßa novamente a instala√ß√£o e configura√ß√£o do Express na pasta do exerc√≠cio. Para testar, crie um endpoint que aponte para o path ‚Äú/ping‚Äù. Esse endpoint pode responder apenas com uma mensagem ‚Äúpong‚Äù.

app.get("/ping", (request, response) => {          
    response.send("Pong! üèì")
})

app.listen(3003,() => {
    console.log("Servidor est√° oline na porta 3003")
})

// Exerc√≠cio 2
// Acesse a API do JSONPlaceholder e observe os endpoints que buscam afazeres (‚Äùto dos‚Äù). Crie uma vari√°vel de tipo para representar cada afazer.
type ToDos = {
    userId : number,
    id : number,
    title: string,
    completed: boolean | string
}
// Exerc√≠cio 3
// Crie um array de afazeres para servir como base de dados da nossa API e utilize a tipagem desenvolvida no exerc√≠cio anterior. 


const listTarefas: ToDos[] = [
    {
        userId : 1,
        id : 4,
        title: "Fazer exercicio labenu",
        completed: true
    },
    {
        userId : 2,
        id : 8,
        title: "Fazer exercicio de logica",
        completed: false
    },
    {
        userId : 1,
        id : 12,
        title: "Organizar a casa",
        completed: true
    },
]
// Exerc√≠cio 4

// Construa um endpoint que retorne todos os afazeres do exerc√≠cio anterior de acordo com um √∫nico status, ou seja, retorne ou afazeres conclu√≠dos ou somente os que ainda est√£o em andamento.
app.get('/afazeres-em-andamendo', (request, response) =>{
    const listaDetarefasEmAndamento = listTarefas.filter((tarefaEmAndamento) => {
        return tarefaEmAndamento.completed === false
    })
    response.status(200).send(listaDetarefasEmAndamento)
}) 
// Exerc√≠cio 5
// Construa um endpoint de cria√ß√£o de afazer. A resposta deve retornar o array de afazeres atualizado.
app.post('/cria-tarefas', (request, response) =>{
   try{

    const criarTarefas = {
        userId : Date.now(),
        id : (request.body.id),
        title:(request.body.title) ,
        completed:(request.body.completed) 
    }
    listTarefas.push(criarTarefas)
    response.status(200).send({criarTarefas})
   }
   catch(error){
    response.status(400).end('Algo deu errado :(')
   }
}) 
// Exerc√≠cio 6
// Construa um endpoint de edi√ß√£o do status de um afazer, ou seja, de completo para incompleto e vice-versa.
// Exerc√≠cio 7
// Construa um endpoint que deleta um determinado afazer de acordo com sua id.
// Exerc√≠cio 8
// Construa um endpoint que retorne todos os afazeres de uma determinada id de usu√°rio.
// Exerc√≠cio 9
// Crie a documenta√ß√£o Postman dos endpoints desenvolvidos