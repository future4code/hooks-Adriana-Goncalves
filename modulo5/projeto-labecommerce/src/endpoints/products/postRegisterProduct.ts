import { Request, Response } from "express";
import { Product } from "../../type/type";
import { v4 as uuidv4 } from "uuid";
import { connection } from "../../data/connection";

// Cadastro de produto
export const postRegisterProduct = async (
  request: Request,
  response: Response
): Promise<void> => {
  let statusCode = 400;
  try {
    const name = request.body.name;
    const price = request.body.price;
    const imageUrl = request.body.imageUrl;

    // verificaÃ§Ã£o de que todos os campos foram passados
    if (!name) {
      throw new Error("VocÃª deve passar um nome ðŸ˜¢");
    }
    if (!price) {
      throw new Error("VocÃª deve passar um preÃ§o ðŸ˜¢");
    }

    if (!imageUrl) {
      throw new Error("VocÃª deve passar uma url de imagem ðŸ˜¢");
    }

   //  verificaÃ§Ã£o de que os campos nÃ£o podem ser vazio
   //  if (name.value === "") {
   //    throw new Error("O campo 'name' nÃ£o pode ser vazio, passe um nome ðŸ˜¢");
   //  }
   //  if ((price.value !== " ")) {
   //    throw new Error("O campo 'price' nÃ£o pode ser vazio, passe um preÃ§o ðŸ˜¢");
   //  }
   //  if ((imageUrl.value !== " ")) {
   //    throw new Error(
   //      "O campo 'imageUrl' nÃ£o pode ser vazio, passe uma url de imagem ðŸ˜¢"
   //    );
   //  }

    // verificaÃ§Ã£o de que os campos sÃ£o string
    if (typeof name !== "string")
      throw new Error("O campo 'nome' deve ser uma string ðŸ”’");

    if (typeof price !== "number")
      throw new Error("O campo 'price' deve ser um number ðŸ”’");

    if (typeof imageUrl !== "string")
      throw new Error("O campo 'imageUrl' deve ser uma string ðŸ”’");

    // logica do Endpoint
    const newUser: Product = {
      id: uuidv4(),
      name: name,
      price: price,
      imageUrl: imageUrl,
    };

    await connection("labecommerce_products").insert({
      id: newUser.id,
      name: newUser.name,
      price: newUser.price,
      image_url: newUser.imageUrl,
    });
    response.status(200).send("Produto criado com sucesso ðŸ˜€ !! ");
  } catch (error: any) {
    response.status(statusCode).send(error.message);
  }
};
